# Low-distortion adversarial attack experiments
model:
  name: "Salesforce/blip-image-captioning-large"
  device: "cuda"

data:
  root: "data/coco2017"
  split: "val2017"
  max_images: 1000
  batch_size: 16

# Image saving configuration (used by run_attack to store *_orig.png / *_adv.png pairs)
save_images:
  enabled: true
  max_count: 10

wandb:
  project: "adversarial-blip-attacks-low-distortion"
  entity: null
  tags: ["adversarial", "blip", "image-captioning", "low-distortion"]

experiments:
  baseline:
    type: "baseline"
    output_file: "eval/baseline_1000.jsonl"

  # FGSM at very low eps bounds
  # Rationale: quick, single-step attacks to establish the tradeoff between
  # minimal distortion and caption degradation. Good starting points for
  # low LPIPS / high SSIM & PSNR.
  fgsm_eps1:
    type: "attack"
    attack: "fgsm"
    epsilon: "1/255"
    output_file: "eval/fgsm_eps1_255_1000.jsonl"
    save_dir: "runs/fgsm_eps1_255_1000"

  fgsm_eps3:
    type: "attack"
    attack: "fgsm"
    epsilon: "3/255"
    output_file: "eval/fgsm_eps3_255_1000.jsonl"
    save_dir: "runs/fgsm_eps3_255_1000"

  # PGD at low eps with standard step size
  # Rationale: multi-step optimization within the same L∞ bound typically
  # achieves stronger caption degradation than FGSM while keeping distortion
  # low; compare BLEU/ROUGE deltas vs LPIPS/SSIM/PSNR.
  pgd_eps1_s10_a1:
    type: "attack"
    attack: "pgd"
    epsilon: "1/255"
    alpha: "1/255"
    steps: 10
    output_file: "eval/pgd_s10_a1_255_eps1_255_1000.jsonl"
    save_dir: "runs/pgd_eps1_255_1000"

  pgd_eps3_s10_a1:
    type: "attack"
    attack: "pgd"
    epsilon: "3/255"
    alpha: "1/255"
    steps: 10
    output_file: "eval/pgd_s10_a1_255_eps3_255_1000.jsonl"
    save_dir: "runs/pgd_eps3_255_1000"

  # PGD same eps, smaller step — compare LPIPS/SSIM vs alpha=1/255
  # Rationale: smaller step size may find subtler perturbations within the
  # same bound, potentially improving image quality at similar attack impact.
  pgd_eps3_s10_a0_5:
    type: "attack"
    attack: "pgd"
    epsilon: "3/255"
    alpha: "0.5/255"
    steps: 10
    output_file: "eval/pgd_s10_a0_5_255_eps3_255_1000.jsonl"
    save_dir: "runs/pgd_eps3_a0_5_255_1000"

  # PGD same eps bound, more steps — see if optimization improves within bound
  # Rationale: increasing steps can improve optimization while keeping the
  # L∞ bound (epsilon) unchanged; check if caption degradation improves with
  # limited effect on LPIPS/SSIM/PSNR.
  pgd_eps2_s20_a1:
    type: "attack"
    attack: "pgd"
    epsilon: "2/255"
    alpha: "1/255"
    steps: 20
    output_file: "eval/pgd_s20_a1_255_eps2_255_1000.jsonl"
    save_dir: "runs/pgd_eps2_s20_255_1000"
