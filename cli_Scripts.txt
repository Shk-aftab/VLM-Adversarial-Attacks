# Adversarial Attacks on BLIP Image Captioning

End-to-end pipeline for baseline captioning, FGSM/PGD attacks on the **image encoder**, and evaluation with BLEU/ROUGE/CLIPScore + LPIPS.

## Quickstart
```      
pip install -r requirements.txt
python -c "import nltk; nltk.download('punkt'); nltk.download('punkt_tab')"
bash scripts/download_coco2017_val.sh data/coco2017
```

### Baseline
```
python scripts/caption_images.py --data_root data/coco2017 --out eval/baseline.jsonl --max_images 1000
```

### FGSM

#### attack 2/225
python -m scripts.attack_and_eval --data_root data/coco2017 --attack fgsm --epsilon 2/255 --out eval/fgsm_eps2_255_1000.jsonl --max_images 1000 --save_dir runs/fgsm_eps2_255_1000

#### eval 2/225
python -m scripts.evaluate_results --baseline eval/baseline_1000.jsonl --adversarial eval/fgsm_eps2_255_1000.jsonl --images_root data/coco2017/val2017

#### compute lpips 
python -m scripts.compute_lpips_psnr_ssim --dir runs/fgsm_eps2_255_1000/fgsm

------------------------------

#### attack 4/225
python -m scripts.attack_and_eval --data_root data/coco2017 --attack fgsm --epsilon 4/255 --out eval/fgsm_eps4_255_1000.jsonl --max_images 1000 --save_dir runs/fgsm_eps4_255_1000

#### eval 4/225
python -m scripts.evaluate_results --baseline eval/baseline_1000.jsonl --adversarial eval/fgsm_eps4_255_1000.jsonl --images_root data/coco2017/val2017

#### compute lpips 
python -m scripts.compute_lpips_psnr_ssim --dir runs/fgsm_eps4_255_1000/fgsm

--------------------------------

#### attack 8/225
python -m scripts.attack_and_eval --data_root data/coco2017 --attack fgsm --epsilon 8/255 --out eval/fgsm_eps8_255_1000.jsonl --max_images 1000 --save_dir runs/fgsm_eps8_255_1000

#### eval 8/225
python -m scripts.evaluate_results --baseline eval/baseline_1000.jsonl --adversarial eval/fgsm_eps8_255_1000.jsonl --images_root data/coco2017/val2017

#### attack 8/225
python -m scripts.compute_lpips_psnr_ssim --dir runs/fgsm_eps8_255_1000/fgsm


### PGD
python -m scripts.attack_and_eval --data_root data/coco2017 --attack pgd --epsilon 2/255 --steps 10 --alpha 1/255 --out eval/pgd_s10_a1_255_eps2_255_1000.jsonl --max_images 1000 --save_dir runs/pgd_eps2_255_1000

python -m scripts.evaluate_results --baseline eval/baseline_1000.jsonl --adversarial eval/pgd_s10_a1_255_eps2_255_1000.jsonl --images_root data/coco2017/val2017

python -m scripts.compute_lpips_psnr_ssim --dir runs/pgd_eps2_255_1000/pgd

---------------------

python -m scripts.attack_and_eval --data_root data/coco2017 --attack pgd --epsilon 4/255 --steps 10 --alpha 1/255 --out eval/pgd_s10_a1_255_eps4_255_1000.jsonl --max_images 1000 --save_dir runs/pgd_eps4_255_1000

python -m scripts.evaluate_results --baseline eval/baseline_1000.jsonl --adversarial eval/pgd_s10_a1_255_eps4_255_1000.jsonl --images_root data/coco2017/val2017

python -m scripts.compute_lpips_psnr_ssim --dir runs/pgd_eps4_255_1000/pgd

--------------------------

python -m scripts.attack_and_eval --data_root data/coco2017 --attack pgd --epsilon 8/255 --steps 10 --alpha 1/255 --out eval/pgd_s10_a1_255_eps8_255_1000.jsonl --max_images 1000 --save_dir runs/pgd_eps8_255_1000

python -m scripts.evaluate_results --baseline eval/baseline_1000.jsonl --adversarial eval/pgd_s10_a1_255_eps8_255_1000.jsonl --images_root data/coco2017/val2017

python -m scripts.compute_lpips_psnr_ssim --dir runs/pgd_eps8_255_1000/pgd

--------------------------